(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(1),o=n(9),a=(n(0),n(162)),s={id:"withPostgres",title:"Postgres"},i={id:"plugins/withPostgres",title:"Postgres",description:"Connecting your Build Tracker application to a PostgreSQL database is easy with the help of `@build-tracker/plugin-with-postgres`",source:"@site/docs/plugins/with-postgres.md",permalink:"/docs/plugins/withPostgres",editUrl:"https://github.com/paularmstrong/build-tracker/edit/next/docs/docs/plugins/with-postgres.md",sidebar:"docs",previous:{title:"Plugins",permalink:"/docs/plugins/plugins"},next:{title:"MariaDB",permalink:"/docs/plugins/withMariadb"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Configuration",id:"configuration",children:[{value:"<code>connectionString: string = process.env.DATABASE_URL</code>",id:"connectionstring-string--processenvdatabase_url",children:[]},{value:"<code>host: string = process.env.PGHOST</code>",id:"host-string--processenvpghost",children:[]},{value:"<code>database: string = process.env.PGPASSWORD</code>",id:"database-string--processenvpgpassword",children:[]},{value:"<code>user: string = process.env.PGUSER</code>",id:"user-string--processenvpguser",children:[]},{value:"<code>password: string = process.env.PGDATABASE</code>",id:"password-string--processenvpgdatabase",children:[]},{value:"<code>port: number = process.env.PGPORT = 5432</code>",id:"port-number--processenvpgport--5432",children:[]},{value:"<code>ssl: boolean = false</code>",id:"ssl-boolean--false",children:[]}]}],p={rightToc:c};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Connecting your Build Tracker application to a PostgreSQL database is easy with the help of ",Object(a.b)("inlineCode",{parentName:"p"},"@build-tracker/plugin-with-postgres")),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"yarn add @build-tracker/plugin-with-postgres@latest\n# or\nnpm install --save @build-tracker/plugin-with-postgres@latest\n")),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,"Edit your ",Object(a.b)("inlineCode",{parentName:"p"},"build-tracker.config.js")," file and compose your output configuration:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const withPostgres = require('@build-tracker/plugin-with-postgres').default;\n\nmodule.exports = withPostgres({\n  pg: {\n    connectionString: '', // default: process.env.DATABASE_URL\n    user: '', // default: process.env.PGUSER\n    host: '', // default: process.env.PGHOST\n    database: '', // default: process.env.PGDATABASE\n    password: '', // default: process.env.PGPASSWORD\n    port: 5432, // default: process.env.PGPORT\n    ssl: true\n  }\n});\n")),Object(a.b)("p",null,"All configuration options that are able to fall back on ",Object(a.b)("inlineCode",{parentName:"p"},"process.env")," environment variables can be written to your systems ",Object(a.b)("inlineCode",{parentName:"p"},"ENV")," or to a local ",Object(a.b)("inlineCode",{parentName:"p"},".env")," file via ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/motdotla/dotenv#readme"}),"dotenv"),"."),Object(a.b)("h3",{id:"connectionstring-string--processenvdatabase_url"},Object(a.b)("inlineCode",{parentName:"h3"},"connectionString: string = process.env.DATABASE_URL")),Object(a.b)("p",null,"Optional. Use a single connection string to bypass the individual configs for ",Object(a.b)("inlineCode",{parentName:"p"},"host"),", ",Object(a.b)("inlineCode",{parentName:"p"},"database"),", ",Object(a.b)("inlineCode",{parentName:"p"},"user"),", ",Object(a.b)("inlineCode",{parentName:"p"},"password"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"port"),"."),Object(a.b)("h3",{id:"host-string--processenvpghost"},Object(a.b)("inlineCode",{parentName:"h3"},"host: string = process.env.PGHOST")),Object(a.b)("p",null,"Database host."),Object(a.b)("h3",{id:"database-string--processenvpgpassword"},Object(a.b)("inlineCode",{parentName:"h3"},"database: string = process.env.PGPASSWORD")),Object(a.b)("p",null,"Database name."),Object(a.b)("h3",{id:"user-string--processenvpguser"},Object(a.b)("inlineCode",{parentName:"h3"},"user: string = process.env.PGUSER")),Object(a.b)("p",null,"Database username with read access."),Object(a.b)("h3",{id:"password-string--processenvpgdatabase"},Object(a.b)("inlineCode",{parentName:"h3"},"password: string = process.env.PGDATABASE")),Object(a.b)("p",null,"Password for the given database username."),Object(a.b)("h3",{id:"port-number--processenvpgport--5432"},Object(a.b)("inlineCode",{parentName:"h3"},"port: number = process.env.PGPORT = 5432")),Object(a.b)("p",null,"Database host port."),Object(a.b)("h3",{id:"ssl-boolean--false"},Object(a.b)("inlineCode",{parentName:"h3"},"ssl: boolean = false")),Object(a.b)("p",null,"Set to true to connect to your host using SSL (if supported)."))}l.isMDXComponent=!0},162:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return g}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},b=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(n),d=r,g=b["".concat(s,".").concat(d)]||b[d]||u[d]||a;return n?o.a.createElement(g,i({ref:t},p,{components:n})):o.a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);