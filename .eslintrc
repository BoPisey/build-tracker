{
  // babel parser to support ES6/7 features
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 7,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": true
    },
    "sourceType": "module"
  },
  "extends": [
    "plugin:flowtype/recommended",
    "plugin:jest/recommended",
    "prettier",
    "prettier/flowtype",
    "prettier/react"
  ],
  "plugins": [
    "flowtype",
    "jsx-a11y",
    "prettier",
    "promise",
    "react",
    "import"
  ],
  "env": {
    "es6": true,
    "node": true,
    "browser": true
  },
  "globals": {
    "document": false,
    "navigator": false,
    "window": false
  },
  "rules": {
    "accessor-pairs": "error",
    "camelcase": "off",
    "constructor-super": "error",
    "curly": ["error", "all"],
    "default-case": ["error", { "commentPattern": "^no default$" }],
    "eqeqeq": ["error", "allow-null"],
    "handle-callback-err": ["error", "^(err|error)$" ],
    "new-cap": ["error", { "newIsCap": true, "capIsNew": false }],
    "no-alert": "warn",
    "no-array-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-console": ["error", { allow: ["warn", "error"] }],
    "no-const-assign": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-implied-eval": "error",
    "no-inner-declarations": ["error", "functions"],
    "no-invalid-regexp": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": ["error", { "allowLoop": false, "allowSwitch": false }],
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-multi-str": "error",
    "no-native-reassign": "error",
    "no-negated-in-lhs": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-path-concat": "error",
    "no-proto": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-return-assign": ["error", "except-parens"],
    "no-script-url": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-undef": "error",
    "no-undef-init": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unused-vars": ["error", { "vars": "all", "args": "none" }],
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "prefer-template": "error",

    // This is necessary to ensure people don't accidentally forget to run prettier to format the code before submitting
    // Make sure this is synced with rc/.prettierrc
    "prettier/prettier": ["error", { "singleQuote": true, "printWidth": 120 }],

    "radix": "error",
    "require-yield": "error",
    "sort-imports": ["error", { "memberSyntaxSortOrder": ["none", "all", "single", "multiple"], "ignoreCase": true }],
    "spaced-comment": ["error", "always", { "markers": ["global", "globals", "eslint", "eslint-disable", "*package", "!", ","] }],
    "use-isnan": "error",
    "valid-typeof": "error",
    "yoda": ["error", "never"],

    // promise
    "promise/param-names": "error",

    // jsx accessibility
    "jsx-a11y/accessible-emoji": "error",
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-has-content": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/aria-activedescendant-has-tabindex": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-role": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/click-events-have-key-events": "error",
    "jsx-a11y/heading-has-content": "error",
    "jsx-a11y/html-has-lang": "error",
    "jsx-a11y/iframe-has-title": "error",
    "jsx-a11y/img-redundant-alt": "error",
    "jsx-a11y/interactive-supports-focus": "error",
    "jsx-a11y/label-has-for": "error",
    "jsx-a11y/media-has-caption": "off",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/no-access-key": "error",
    // Re-visit if we move config to an `eslint-config-twitter`
    "jsx-a11y/no-autofocus": "off",
    "jsx-a11y/no-distracting-elements": "error",
    "jsx-a11y/no-interactive-element-to-noninteractive-role": ["error", { "tr": ["none", "presentation"] }],
    "jsx-a11y/no-noninteractive-element-interactions": "off",
    "jsx-a11y/no-noninteractive-element-to-interactive-role": ["error", {
      "li": ["menuitem", "option", "row", "tab", "treeitem"],
      "ol": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
      "ul": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
      "table": ["grid"],
      "td": ["gridcell"]
    }],
    "jsx-a11y/no-noninteractive-tabindex": ["error", { "tags": [], "roles": ["tabpanel"] }],
    "jsx-a11y/no-onchange": "off",
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/scope": "error",
    "jsx-a11y/tabindex-no-positive": "error",

    // react
    "react/display-name": "off",
    "react/jsx-boolean-value": "error",
    "react/jsx-handler-names": ["error", {
      "eventHandlerPrefix": "_handle"
    }],
    "react/jsx-no-bind": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-sort-props": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-did-mount-set-state": "off",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-multi-comp": "off",
    "react/no-string-refs": "error",
    "react/no-unknown-property": "error",
    "react/prefer-es6-class": "error",
    "react/prop-types": "error",
    "react/react-in-jsx-scope": "off",
    "react/self-closing-comp": "error",
    "react/sort-comp": "off",
    "react/sort-prop-types": "error",

    // flow types
    "flowtype/boolean-style": [
      "error",
      "boolean"
    ],
    "flowtype/define-flow-type": "warn",
    "flowtype/no-primitive-constructor-types": "error",
    "flowtype/no-weak-types": "off",
    "flowtype/object-type-delimiter": [
      "error",
      "comma"
    ],
    "flowtype/require-parameter-type": "off",
    "flowtype/require-return-type": "off",
    "flowtype/require-valid-file-annotation": "error",
    "flowtype/use-flow-type": "warn",
    "flowtype/valid-syntax": "warn",

    // allows type and regular imports from the same file
    "import/no-duplicates": "error"
  },
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": true
    },
    "react": {
      "version": "detect"
    }
  }
}
